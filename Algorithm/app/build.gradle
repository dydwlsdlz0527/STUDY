/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'jacoco'
    id 'application'
}

jacoco {
    toolVersion = "0.8.11"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testImplementation 'org.jacoco:org.jacoco.agent:0.8.11:runtime' // 필요하다면 추가
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'org.jacoco:org.jacoco.agent:0.8.11:runtime' // 필요하다면 추가
    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'algorithm.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.jacocoTestReport {
    dependsOn tasks.test // test 태스크가 먼저 실행되도록 설정
    reports {
        xml.required = true
        html.required = true
        csv.required = false

        xml.outputLocation = file("${buildDir}/reports/jacoco/report.xml")
        html.outputLocation = file("${buildDir}/reports/jacoco/html")
    }

    // 커버리지 최소 기준 설정 (선택 사항)
    // check 태스크를 통해 커버리지를 검사할 수 있습니다.
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/YourApplication.class', // 특정 클래스 제외 예시
                '**/model/**',              // model 패키지 전체 제외 예시
                '**/*Application.class'
            ])
        }))
    }
}

